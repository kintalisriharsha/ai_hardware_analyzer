# Generated by Django 4.2.5 on 2025-04-01 10:02

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ModelTrainingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trained_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('model_file_path', models.CharField(max_length=255)),
                ('scaler_file_path', models.CharField(max_length=255)),
                ('training_samples', models.IntegerField()),
                ('performance_score', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Model training histories',
                'ordering': ['-trained_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('cpu_percent', models.FloatField()),
                ('memory_percent', models.FloatField()),
                ('swap_percent', models.FloatField()),
                ('disk_usage_percent', models.FloatField()),
                ('disk_read_count', models.BigIntegerField()),
                ('disk_write_count', models.BigIntegerField()),
                ('network_bytes_sent', models.BigIntegerField()),
                ('network_bytes_recv', models.BigIntegerField()),
                ('cpu_temp', models.FloatField(blank=True, null=True)),
                ('battery_percent', models.FloatField(blank=True, null=True)),
                ('fan_speed', models.IntegerField(blank=True, null=True)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('anomaly_score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='hardware_ap_timesta_c913d4_idx'), models.Index(fields=['is_anomaly'], name='hardware_ap_is_anom_f79023_idx')],
            },
        ),
        migrations.CreateModel(
            name='HardwareIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('issue_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('recommendation', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='hardware_api.systemmetric')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
